{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","isValid","handleChange","target","setState","id","value","resetForm","changeIsValid","newValue","valid","e","idElem","trim","filter","elem","test","validAllForm","addMovie","this","props","onSubmit","preventDefault","includes","placeholder","onChange","onBlur","type","disabled","length","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.424cbd8d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.css';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isValid: [],\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({\n      [target.id]: target.value,\n    });\n  }\n\n  resetForm = () => (\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      isValid: [],\n    })\n  );\n\n  changeIsValid = (newValue) => {\n    this.setState(state => ({\n      isValid: [...state.isValid, newValue],\n    }));\n  };\n\n  valid = (e, idElem) => {\n    const ragExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    const id = e ? e.target.id : idElem;\n    const value = e ? e.target.value : this.state[idElem];\n\n    if (id !== 'imgUrl' && id !== 'imdbUrl') {\n      if (!value.trim()) {\n        if (!e) {\n          this.changeIsValid('');\n\n          return false;\n        }\n\n        this.changeIsValid(id);\n      } else {\n        this.setState(state => ({\n          isValid: state.isValid.filter(elem => (elem !== id)),\n        }));\n      }\n\n      return true;\n    }\n\n    if (!ragExp.test(this.state[id])) {\n      if (!e) {\n        this.changeIsValid('');\n\n        return false;\n      }\n\n      this.changeIsValid(id);\n    } else {\n      this.setState(state => ({\n        isValid: state.isValid.filter(elem => (elem !== id)),\n      }));\n    }\n\n    return true;\n  };\n\n  validAllForm = () => (\n    this.valid(null, 'title') || this.valid(null, 'description')\n    || this.valid(null, 'imgUrl') || this.valid(null, 'imdbUrl')\n    || this.valid(null, 'imdbId')\n  );\n\n  render() {\n    const { addMovie } = this.props;\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      isValid,\n    } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (!this.validAllForm()) {\n            return;\n          }\n\n          addMovie({\n            title,\n            description,\n            imgUrl,\n            imdbUrl,\n            imdbId,\n          });\n          this.resetForm();\n        }}\n      >\n        <h2>Form add new cool film</h2>\n\n        <hr />\n        <label className={isValid.includes('title') ? 'error' : ''}>\n          title\n          <input\n            id=\"title\"\n            placeholder=\"title your film..\"\n            value={this.state.title}\n            onChange={this.handleChange}\n            onBlur={this.valid}\n          />\n        </label>\n        <hr />\n\n        <label className={isValid.includes('description') ? 'error' : ''}>\n          description\n          <input\n            id=\"description\"\n            placeholder=\"description your film..\"\n            value={this.state.description}\n            onChange={this.handleChange}\n            onBlur={this.valid}\n          />\n        </label>\n        <hr />\n\n        <label className={isValid.includes('imgUrl') ? 'error' : ''}>\n          img url\n          <input\n            id=\"imgUrl\"\n            placeholder=\"img url\"\n            value={this.state.imgUrl}\n            onChange={this.handleChange}\n            onBlur={this.valid}\n          />\n        </label>\n        <hr />\n\n        <label className={isValid.includes('imdbUrl') ? 'error' : ''}>\n          imdb url\n          <input\n            id=\"imdbUrl\"\n            placeholder=\"imdb url\"\n            value={this.state.imdbUrl}\n            onChange={this.handleChange}\n            onBlur={this.valid}\n          />\n        </label>\n        <hr />\n\n        <label className={isValid.includes('imdbId') ? 'error' : ''}>\n          imdb id\n          <input\n            id=\"imdbId\"\n            placeholder=\"imdb id\"\n            value={this.state.imdbId}\n            onChange={this.handleChange}\n            onBlur={this.valid}\n          />\n        </label>\n        <hr />\n\n        <button\n          type=\"submit\"\n          disabled={!!isValid.length}\n        >\n          Save film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}