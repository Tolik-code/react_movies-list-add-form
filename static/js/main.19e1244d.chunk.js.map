{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","isValid","handleChange","target","setState","name","value","resetForm","addNoValid","newValue","removeNoValid","removeValue","filter","elem","validUrl","url","test","validRepeatData","compareValue","props","some","valid","fieldName","trim","validAllForm","addMovie","this","onSubmit","e","preventDefault","includes","id","placeholder","onChange","onBlur","type","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19e1244d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.css';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isValid: [],\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({\n      [target.name]: target.value,\n    });\n  }\n\n  resetForm = () => (\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      isValid: [],\n    })\n  );\n\n  addNoValid = (newValue) => {\n    this.setState(state => ({\n      isValid: [...state.isValid, newValue],\n    }));\n  };\n\n  removeNoValid = (removeValue) => {\n    this.setState(state => ({\n      isValid: state.isValid.filter(elem => (elem !== removeValue)),\n    }));\n  };\n\n  validUrl = (url) => {\n    const ragExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    return !ragExp.test(url);\n  };\n\n  validRepeatData = (compareValue) => {\n    return !this.props.movies.some(movie => (\n      movie[compareValue] === this.state[compareValue]));\n  };\n\n  valid = ({ target }) => {\n    const fieldName = target.name;\n    const { value } = target;\n\n    if (fieldName === 'imgUrl' || fieldName === 'imdbUrl'\n    || fieldName === 'imdbId') {\n      if (!this.validRepeatData(fieldName)) {\n        this.addNoValid(fieldName);\n\n        return;\n      }\n\n      this.removeNoValid(fieldName);\n    }\n\n    if (fieldName !== 'imgUrl' && fieldName !== 'imdbUrl') {\n      if (!value.trim()) {\n        this.addNoValid(fieldName);\n      } else {\n        this.removeNoValid(fieldName);\n      }\n\n      return;\n    }\n\n    if (this.validUrl(this.state[fieldName])) {\n      this.addNoValid(fieldName);\n    } else {\n      this.removeNoValid(fieldName);\n    }\n  };\n\n  validAllForm = () => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return !this.validUrl(imgUrl) && !this.validUrl(imdbUrl)\n    && title.trim() && description.trim() && imdbId.trim()\n    && this.validRepeatData('imgUrl') && this.validRepeatData('imdbUrl')\n    && this.validRepeatData('imdbId');\n  };\n\n  render() {\n    const { addMovie } = this.props;\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      isValid,\n    } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (!this.validAllForm()) {\n            return;\n          }\n\n          addMovie({\n            title,\n            description,\n            imgUrl,\n            imdbUrl,\n            imdbId,\n          });\n          this.resetForm();\n        }}\n      >\n        <h2>Form add new cool film</h2>\n\n        <hr />\n        <label className={isValid.includes('title') ? 'error' : ''}>\n          title\n          <input\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"title your film..\"\n            value={this.state.title}\n            onChange={this.handleChange}\n            onBlur={this.valid}\n          />\n        </label>\n        <hr />\n\n        <label className={isValid.includes('description') ? 'error' : ''}>\n          description\n          <input\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"description your film..\"\n            value={this.state.description}\n            onChange={this.handleChange}\n            onBlur={this.valid}\n          />\n        </label>\n        <hr />\n\n        <label className={isValid.includes('imgUrl') ? 'error-repeat' : ''}>\n          img url\n          <input\n            id=\"imgUrl\"\n            name=\"imgUrl\"\n            placeholder=\"img url\"\n            value={this.state.imgUrl}\n            onChange={this.handleChange}\n            onBlur={this.valid}\n          />\n        </label>\n        <hr />\n\n        <label className={isValid.includes('imdbUrl') ? 'error-repeat' : ''}>\n          imdb url\n          <input\n            id=\"imdbUrl\"\n            name=\"imdbUrl\"\n            placeholder=\"imdb url\"\n            value={this.state.imdbUrl}\n            onChange={this.handleChange}\n            onBlur={this.valid}\n          />\n        </label>\n        <hr />\n\n        <label className={isValid.includes('imdbId') ? 'error-repeat' : ''}>\n          imdb id\n          <input\n            id=\"imdbId\"\n            name=\"imdbId\"\n            placeholder=\"imdb id\"\n            value={this.state.imdbId}\n            onChange={this.handleChange}\n            onBlur={this.valid}\n          />\n        </label>\n        <hr />\n\n        <button\n          type=\"submit\"\n          disabled={!this.validAllForm()}\n        >\n          Save film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  movies: PropTypes.shape({\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n    imdbId: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} movies={movies} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}